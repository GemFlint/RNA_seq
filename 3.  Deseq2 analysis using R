# To install Rsubread on R versions older than 4.3
> if (!require("BiocManager", quietly = TRUE))
+     install.packages("BiocManager")
> BiocManager::install("Rsubread")

# Conduct feature count, all .bam and .bai files of both conditions must be in same file (e.g PEO1 AND PEO4 in same one)
# Done on terminal in job submission as could not load Rsubread
#PBS -lwalltime=08:00:00
#PBS -lselect=1:ncpus=100:mem=900gb

module load subread

OUTPUT_FILE=$PBS_O_WORKDIR/fc_peo4_pds6hr.txt

featureCounts -T 3 -a /rds/general/project/diantonio/live/tools/genomes/hg38_ucsc/hg38.refGene.gtf -o temp_feature_counts.txt $PBS_O_WORKDIR/*.bam

awk 'BEGIN{OFS="\t"} NR==1 {for(i=7;i<=NF;i++) sample[i]=$i} NR>2 {printf $1; for(i=7;i<=NF;i++) printf "\t"$(i); print ""}' temp_feature_counts.txt > $OUTPUT_FILE

HEADER="GeneID"
for bam in $PBS_O_WORKDIR/*.bam; do
    BASENAME=$(basename $bam .bam)
    HEADER="$HEADER\t$BASENAME"
done
sed -i "1s/.*/$HEADER/" $OUTPUT_FILE

cp * $PBS_O_WORKDIR

# convert txt into csv file from previous step
# these steps to be done in r studio

# import fc into R
fc_PEO_RNA <- read.csv("PEO1_4_FC.csv") 

# add geneID as row name
samp2 <- fc_PEO_RNA[,-1] 
rownames(samp2) <- fc_PEO_RNA[,1]

# remove any na values
samp2[is.na(samp2)] <- 0

# now ready to move onto deseq2
BiocManager::install("DESeq2")
library(DESeq2)

# make deseq2 dataset (dds) # .txt file is the .txt fc file generated previously
samp2 <- read.delim("fc_PEO_RNA.txt", header = TRUE, sep = "\t")
condition <- c("PEO1", "PEO1", "PEO1", "PEO4", "PEO4", "PEO4")
dds <- DESeqDataSetFromMatrix(countData=samp2, colData=DataFrame(condition), design=~condition)
#gives details on how many rows and columns
dds

# if you get errors in the dds step, then try these steps
# first run this to get the dimensions of the file, if you have the geneID counting as a column it'll say 1x extra than the number of samples that you have
dim(samp2)
# if you do have an incorrect number of columns, then do this code- this will set it as a row name, and then remove the title
rownames(samp2) <- samp2[,1]  
samp2 <- samp2[,-1] 
# check again with dim(samp2), you should now have the right number as to the right number of samples
dim (samp2)
# the continue with the following steps (each title of condition corresponds to what sample type, eg mutant or wildtype, peo1 or peo1 treated)
colData <- DataFrame(condition = condition)
dds <- DESeqDataSetFromMatrix(countData = samp2, colData = colData, design = ~ condition)

#remove rows that have <10 counts - this reduces memory size of dds and increases deseq speed
dds <- dds[rowSums(counts(dds))>=10,]

#conduct differential analysis
dds <- DESeq(dds)
res <- results(dds)
res

#get the name of the comparisons made aka coefficients
resultsNames(dds) 

#Shrink fold change - coef = name from above step (it will say in the bulk if text that r studio produces)
res.shr <- lfcShrink(dds,coef="condition_PEO4_vs_PEO1")

#Remove rows with missing adj p value
resFix <- res.shr[!is.na(res.shr$padj),]

#Export data 
write.csv(as.data.frame(resFix), file="geneID_RNA_PEO1_v_PEO4.csv")


# to generate a fc file of only genes that have a g4 present
# create a .txt file using text editor (mac) of a list of all the genes on seperate rows 
# on hpc use the following code 
awk 'NR==FNR{genes[$1]; next} $1 in genes' g4_genes_list.txt fc_file_already_generated.txt > filtered_counts.txt

# to add back in geneID and sample titles, use code and change each 'sample' to the title of the column
sed -i $'1iGeneID\tsample1\tsample2' fc_filtered_file.txt
